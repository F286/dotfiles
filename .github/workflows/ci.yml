name: CI
on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Ensure chezmoi is installed (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if ! command -v chezmoi >/dev/null; then
            echo "chezmoi not found. Attempting to install"
            if command -v apt-get >/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y chezmoi || sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin
            elif command -v brew >/dev/null; then
              brew install chezmoi
            else
              sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin
            fi
          fi

      - name: Ensure chezmoi is installed (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (-not (Get-Command chezmoi -ErrorAction SilentlyContinue)) {
            Write-Host 'chezmoi not found. Installing via choco...'
            choco install chezmoi -y --no-progress
          }

      - name: Initialize chezmoi config (from template) [Unix]
        if: runner.os != 'Windows'
        shell: bash
        run: |
          # Generate config from .chezmoi.toml.tmpl in this repo
          chezmoi init --source .
          mkdir -p "$RUNNER_TEMP/chezmoi-home"

      - name: Initialize chezmoi config (from template) [Windows]
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          chezmoi init --source .
          New-Item -ItemType Directory -Force -Path "$env:RUNNER_TEMP\chezmoi-home" | Out-Null

      - name: Dry-run apply (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: chezmoi apply --dry-run -S . --destination "$RUNNER_TEMP/chezmoi-home"

      - name: Dry-run apply (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: chezmoi apply --dry-run -S . --destination "$env:RUNNER_TEMP\chezmoi-home"

      - name: Doctor (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: chezmoi doctor -S . --destination "$RUNNER_TEMP/chezmoi-home"

      - name: Doctor (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: chezmoi doctor -S . --destination "$env:RUNNER_TEMP\chezmoi-home"

