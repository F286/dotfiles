#!/usr/bin/env bash
set -euo pipefail

# Optional: highlight the live query text in the preview (1=on, 0=off)
HIGHLIGHT_QUERY="${HIGHLIGHT_QUERY:-1}"

# Optional initial query from args
# shellcheck disable=SC2034
QUERY="${*:-}"

# Hard requirements
for cmd in rg fzf; do
  if ! command -v "$cmd" >/dev/null 2>&1; then
    echo "$cmd not found on PATH." >&2
    exit 0
  fi
done

# Determine search root - prefer git root, else CWD
ROOT="$(git -C "$PWD" rev-parse --show-toplevel 2>/dev/null || printf '%s' "$PWD")"
cd "$ROOT"

# Build the ripgrep command used on every reload
# - hidden files included, .git excluded
# - color always so fzf can show ANSI
RG=(
  rg
  --hidden --glob '!.git'
  --line-number --column --no-heading
  --smart-case --follow
  --max-columns=4096
  --color=always
)

# fzf reload snippet - only search when query is non-empty
# IMPORTANT: leave {q} unquoted; fzf provides safe quoting.
# shellcheck disable=SC2034
RELOAD_CMD='
  if [ -n {q} ]; then
    '"${RG[*]}"' -- {q}
  else
    printf ""
  fi
'

# Preview command
# - centers around the hit with context
# - highlights the matched line (and optionally the query text)
# - prefers bat, falls back to sed + nl
# IMPORTANT: leave {1},{2},{q} unquoted; fzf provides safe quoting.
# shellcheck disable=SC2016
PREVIEW_CMD='
  [ -z {1} ] && exit 0
  L={2}; [ -z "$L" ] && L=1
  S=$((L>15 ? L-15 : 1))
  E=$((L+40))

  _want_q_hl='"${HIGHLIGHT_QUERY}"'

  if command -v bat >/dev/null 2>&1; then
    if [ -n {q} ] && [ "$_want_q_hl" = "1" ]; then
      bat --paging=never --style=numbers --color=always \
          --highlight-line "$L" --line-range ${S}:${E} -- {1} \
        | rg --passthru --color=always -e {q} || true
    else
      bat --paging=never --style=numbers --color=always \
          --highlight-line "$L" --line-range ${S}:${E} -- {1}
    fi
  elif command -v batcat >/dev/null 2>&1; then
    if [ -n {q} ] && [ "$_want_q_hl" = "1" ]; then
      batcat --paging=never --style=numbers --color=always \
             --highlight-line "$L" --line-range ${S}:${E} -- {1} \
        | rg --passthru --color=always -e {q} || true
    else
      batcat --paging=never --style=numbers --color=always \
             --highlight-line "$L" --line-range ${S}:${E} -- {1}
    fi
  else
    # Portable fallback: use input redirection instead of "sed --"
    if [ -n {q} ] && [ "$_want_q_hl" = "1" ]; then
      sed -n "${S},${E}p" < {1} | nl -ba -w1 -s"  " \
        | awk -v l="$L" '"'"'{ if (NR==l) printf "\033[7m%s\033[0m\n", $0; else print }'"'"' \
        | rg --passthru --color=always -e {q} || true
    else
      sed -n "${S},${E}p" < {1} | nl -ba -w1 -s"  " \
        | awk -v l="$L" '"'"'{ if (NR==l) printf "\033[7m%s\033[0m\n", $0; else print }'"'"'
    fi
  fi
'

# Nice defaults close to LazyVim fzf-lua look
# shellcheck disable=SC2054
FZF_ARGS=(
  --ansi
  --multi
  --phony                # do not filter locally, we reload from rg
  --bind "start:reload:${RELOAD_CMD}"
  --bind "change:reload:${RELOAD_CMD}"
  --prompt='> '
  --header=''            # keep top clean just like LazyVim Grep
  --border --height=90% --layout=reverse
  --margin=1,2           # float-like feel
  --info=inline          # shows 1/65 on the right
  --delimiter=':'
  --preview="${PREVIEW_CMD}"
  --preview-window='right,60%,border,wrap'
  --bind 'alt-p:toggle-preview'
  --bind 'ctrl-d:preview-half-page-down,ctrl-u:preview-half-page-up'
  --bind 'alt-a:toggle-all'
  # IMPORTANT: leave placeholders unquoted here as well
  --bind 'enter:execute-silent(code -r --goto {1}:{2}:{3})+abort'
  --bind 'ctrl-q:execute-silent(code -r --goto {+1}:{+2}:{+3})+abort'
  --color='border:#5e81ac'
  --color='spinner:#88c0d0,header:#88c0d0,pointer:#88c0d0,marker:#a3be8c'
  --border-label "Grep - $(basename "$ROOT")"
)

# Run fzf. If user cancels, do not fail the task.
FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS-}" fzf \
  "${FZF_ARGS[@]}" \
  --query "$QUERY" || true

exit 0

