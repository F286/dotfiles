#!/usr/bin/env bash
set -euo pipefail

# Optional initial query, e.g. `vf "*.ts"`
QUERY="${*:-}"

# Source generation: prefer Git index (fast), else fd -> rg -> find
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  SRC_CMD=(git -c core.quotepath=false ls-files -co --exclude-standard)
elif command -v fd >/dev/null 2>&1; then
  SRC_CMD=(fd --type f --hidden --follow --exclude .git)
elif command -v rg >/dev/null 2>&1; then
  SRC_CMD=(rg --files --hidden --follow -g '!.git')
else
  SRC_CMD=(find . -type f)
fi

# Preview (bat if present, else head)
if command -v bat >/dev/null 2>&1; then
  PREVIEW='bat --style=numbers --color=always -- {} 2>/dev/null || head -n 200 -- {}'
else
  PREVIEW='head -n 200 -- {}'
fi

# Run fzf (preview on the RIGHT by default, Alt-P toggles like LazyVim)
SEL="$("${SRC_CMD[@]}" | fzf --prompt='Files ï€‚  ' \
  --preview "$PREVIEW" --preview-window=right,60%,border \
  --bind 'alt-p:toggle-preview' --multi --query "$QUERY" || true)"

# Open all selected files (works on Bash 3.2)
if [ -n "${SEL:-}" ]; then
  items=()
  while IFS= read -r line; do
    [ -n "$line" ] && items+=("$line")
  done <<<"$SEL"

  if command -v code >/dev/null 2>&1; then
    # Open everything in the current VS Code window
    code -r -- "${items[@]}"
  else
    "${VISUAL:-${EDITOR:-vi}}" "${items[@]}"
  fi
fi
exit 0
