if [[ -o interactive ]]; then
  stty -ixon -ixoff
fi

# Path setup (add custom bins before system paths)
for d in "$HOME/.local/bin" "$HOME/bin" "/usr/local/bin"; do
  if [[ -d $d ]] && [[ ":$PATH:" != *":$d:"* ]]; then
    export PATH="$d:$PATH"
  fi
done

# Default editor
export EDITOR="nvim"
export VISUAL="$EDITOR"

# Language-specific bin directories
# Rust/Cargo
if [[ -d $HOME/.cargo/bin ]]; then
  export PATH="$HOME/.cargo/bin:$PATH"
fi

# Go
if [[ -d $HOME/go/bin ]]; then
  export GOPATH="$HOME/go"
  export PATH="$GOPATH/bin:$PATH"
fi

# Python via pyenv (if installed)
if /usr/bin/command -v pyenv &>/dev/null; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
fi

# Node via NVM (if installed)
if [[ -s "$HOME/.nvm/nvm.sh" ]]; then
  export NVM_DIR="$HOME/.nvm"
  source "$NVM_DIR/nvm.sh"
fi

# Locale and less settings
export LANG="en_US.UTF-8"
export LC_ALL="$LANG"
export LESS="-RFX"

# Auto-update dotfiles on login using helper script
if command -v chezmoi-auto-update >/dev/null 2>&1; then
  chezmoi-auto-update
fi

# Shell Options
setopt autocd             # Enter directory just by typing its name
setopt correct            # Auto correct command typos
setopt nocaseglob         # Case insensitive globbing
setopt extended_glob      # Extended globbing
setopt hist_ignore_all_dups  # Donâ€™t store duplicate history
setopt share_history         # Share command history between sessions

# History
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

# Key Bindings
bindkey -e                # Use emacs keybindings
bindkey '^[[1;5C' forward-word     # Ctrl+Right
bindkey '^[[1;5D' backward-word    # Ctrl+Left

# Bootstrap Starship
eval "$(starship init zsh)"

# Zsh Plugins: autosuggestions & syntax-highlighting
# Load from common installation paths without relying on brew
for plugin in zsh-autosuggestions zsh-syntax-highlighting; do
  for dir in "/usr/local/share/$plugin" "/opt/homebrew/share/$plugin" "/usr/share/$plugin"; do
    if [[ -r "$dir/$plugin.zsh" ]]; then
      source "$dir/$plugin.zsh"
      break 2
    fi
  done
done

# Autocomplete
autoload -Uz compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# zoxide
eval "$(zoxide init zsh)"

# Aliases
alias z='cd'
